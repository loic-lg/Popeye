version: '3'

services:
  poll:
    build: ./poll
    ports:
      - "5000:80"
    networks:
      - poll-tier
      #- back-tier
    environment:
      - REDIS_HOST=redis
    depends_on:
      # message de marvin qui attend la db
      redis:
        condition: service_healthy

    restart: on-failure

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - poll-tier
      - back-tier
    restart: on-failure

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10


  worker:
    build: ./worker
    networks:
      - back-tier
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - redis
      - db
    restart: on-failure

  db:
    image: postgres:15-alpine
    environment:
      - PG_USER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - back-tier
      - result-tier
    restart: on-failure


  result:
    build: ./result
    ports:
      - "5001:80"
    networks:
      - result-tier
      #- back-tier
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
    restart: on-failure

networks:
  poll-tier:
  result-tier:
  back-tier:

volumes:
  db-data:
